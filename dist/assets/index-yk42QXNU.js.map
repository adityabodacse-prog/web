{"version":3,"file":"index-yk42QXNU.js","sources":["../../src/lib/supabase.ts","../../src/hooks/useAuth.ts","../../src/hooks/useOfflineData.ts","../../src/hooks/useAlerts.ts","../../src/components/Layout/Header.tsx","../../src/components/Layout/Sidebar.tsx","../../src/components/Auth/LoginForm.tsx","../../src/components/Common/LoadingSpinner.tsx","../../src/components/Dashboard/StatsCard.tsx","../../src/components/Dashboard/RealtimeChart.tsx","../../src/components/Dashboard/AlertsPanel.tsx","../../src/components/Sensors/SensorMap.tsx","../../src/hooks/useSensorData.ts","../../src/pages/Dashboard.tsx","../../src/pages/Sensors.tsx","../../src/pages/Alerts.tsx","../../src/components/Reports/ReportGenerator.tsx","../../src/pages/Reports.tsx","../../src/pages/Settings.tsx","../../src/lib/i18n.ts","../../src/App.tsx","../../src/components/Common/ErrorBoundary.tsx","../../src/main.tsx"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables')\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n\n// Database types\nexport interface SensorReading {\n  id: string\n  sensor_id: string\n  timestamp: string\n  ph: number\n  temperature: number\n  turbidity: number\n  dissolved_oxygen: number\n  conductivity: number\n  salinity: number\n  water_level: number\n  location_lat: number\n  location_lng: number\n  created_at: string\n}\n\nexport interface HazardAlert {\n  id: string\n  type: 'tsunami' | 'high_waves' | 'oil_spill' | 'chemical_pollution' | 'biological_pollution'\n  severity: 'low' | 'medium' | 'high' | 'critical'\n  title: string\n  description: string\n  location_lat: number\n  location_lng: number\n  affected_radius: number\n  is_active: boolean\n  created_at: string\n  updated_at: string\n}\n\nexport interface UserProfile {\n  id: string\n  email: string\n  role: 'admin' | 'operator' | 'viewer'\n  full_name: string\n  organization: string\n  created_at: string\n  updated_at: string\n}\n\nexport interface Sensor {\n  id: string\n  name: string\n  location_lat: number\n  location_lng: number\n  is_active: boolean\n  last_reading_at: string\n  created_at: string\n}","import { useState, useEffect } from 'react'\nimport { User } from '@supabase/supabase-js'\nimport { supabase, UserProfile } from '../lib/supabase'\n\nexport function useAuth() {\n  const [user, setUser] = useState<User | null>(null)\n  const [profile, setProfile] = useState<UserProfile | null>(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    // Get initial session\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setUser(session?.user ?? null)\n      if (session?.user) {\n        fetchProfile(session.user.id)\n      }\n      setLoading(false)\n    })\n\n    // Listen for auth changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\n      async (_, session) => {\n        setUser(session?.user ?? null)\n        if (session?.user) {\n          await fetchProfile(session.user.id)\n        } else {\n          setProfile(null)\n        }\n        setLoading(false)\n      }\n    )\n\n    return () => subscription.unsubscribe()\n  }, [])\n\n  const fetchProfile = async (userId: string) => {\n    try {\n      const { data, error } = await supabase\n        .from('user_profiles')\n        .select('*')\n        .eq('id', userId)\n        .single()\n\n      if (error) throw error\n      setProfile(data)\n    } catch (error) {\n      console.error('Error fetching profile:', error)\n    }\n  }\n\n  const signIn = async (email: string, password: string) => {\n    const { error } = await supabase.auth.signInWithPassword({\n      email,\n      password,\n    })\n    return { error }\n  }\n\n  const signOut = async () => {\n    const { error } = await supabase.auth.signOut()\n    return { error }\n  }\n\n  const hasRole = (requiredRole: string) => {\n    if (!profile) return false\n    const roleHierarchy = { viewer: 1, operator: 2, admin: 3 }\n    return roleHierarchy[profile.role as keyof typeof roleHierarchy] >= \n           roleHierarchy[requiredRole as keyof typeof roleHierarchy]\n  }\n\n  return {\n    user,\n    profile,\n    loading,\n    signIn,\n    signOut,\n    hasRole,\n  }\n}","import { useState, useEffect } from 'react'\n\ninterface OfflineData {\n  [key: string]: any\n}\n\nexport function useOfflineData(key: string) {\n  const [data, setData] = useState<OfflineData | null>(null)\n  const [isOnline, setIsOnline] = useState(navigator.onLine)\n\n  useEffect(() => {\n    // Load cached data on mount\n    const cachedData = localStorage.getItem(`offline_${key}`)\n    if (cachedData) {\n      try {\n        setData(JSON.parse(cachedData))\n      } catch (error) {\n        console.error('Error parsing cached data:', error)\n      }\n    }\n\n    // Listen for online/offline events\n    const handleOnline = () => setIsOnline(true)\n    const handleOffline = () => setIsOnline(false)\n\n    window.addEventListener('online', handleOnline)\n    window.addEventListener('offline', handleOffline)\n\n    return () => {\n      window.removeEventListener('online', handleOnline)\n      window.removeEventListener('offline', handleOffline)\n    }\n  }, [key])\n\n  const cacheData = (newData: OfflineData) => {\n    try {\n      localStorage.setItem(`offline_${key}`, JSON.stringify(newData))\n      setData(newData)\n    } catch (error) {\n      console.error('Error caching data:', error)\n    }\n  }\n\n  const clearCache = () => {\n    localStorage.removeItem(`offline_${key}`)\n    setData(null)\n  }\n\n  return {\n    data,\n    isOnline,\n    cacheData,\n    clearCache,\n  }\n}","import { useState, useEffect } from 'react'\nimport { supabase, HazardAlert } from '../lib/supabase'\nimport { useOfflineData } from './useOfflineData'\n\nexport function useAlerts() {\n  const [alerts, setAlerts] = useState<HazardAlert[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const { data: cachedData, isOnline, cacheData } = useOfflineData('alerts')\n\n  useEffect(() => {\n    fetchAlerts()\n\n    // Set up real-time subscription\n    const subscription = supabase\n      .channel('hazard_alerts')\n      .on('postgres_changes', \n        { event: '*', schema: 'public', table: 'hazard_alerts' },\n        (payload) => {\n          if (payload.eventType === 'INSERT') {\n            setAlerts(prev => [payload.new as HazardAlert, ...prev])\n          } else if (payload.eventType === 'UPDATE') {\n            setAlerts(prev => prev.map(alert => \n              alert.id === payload.new.id ? payload.new as HazardAlert : alert\n            ))\n          } else if (payload.eventType === 'DELETE') {\n            setAlerts(prev => prev.filter(alert => alert.id !== payload.old.id))\n          }\n        }\n      )\n      .subscribe()\n\n    return () => {\n      subscription.unsubscribe()\n    }\n  }, [])\n\n  const fetchAlerts = async () => {\n    try {\n      setLoading(true)\n      \n      if (!isOnline && cachedData?.alerts) {\n        setAlerts(cachedData.alerts)\n        setLoading(false)\n        return\n      }\n\n      const { data, error } = await supabase\n        .from('hazard_alerts')\n        .select('*')\n        .order('created_at', { ascending: false })\n\n      if (error) throw error\n\n      setAlerts(data || [])\n      if (isOnline) {\n        cacheData({ ...cachedData, alerts: data || [] })\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Error fetching alerts')\n      if (cachedData?.alerts) {\n        setAlerts(cachedData.alerts)\n      }\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const getActiveAlerts = () => {\n    return alerts.filter(alert => alert.is_active)\n  }\n\n  const getAlertsByType = (type: HazardAlert['type']) => {\n    return alerts.filter(alert => alert.type === type)\n  }\n\n  const getAlertsBySeverity = (severity: HazardAlert['severity']) => {\n    return alerts.filter(alert => alert.severity === severity)\n  }\n\n  const createAlert = async (alertData: Omit<HazardAlert, 'id' | 'created_at' | 'updated_at'>) => {\n    try {\n      const { data, error } = await supabase\n        .from('hazard_alerts')\n        .insert([alertData])\n        .select()\n        .single()\n\n      if (error) throw error\n      return { data, error: null }\n    } catch (err) {\n      return { data: null, error: err instanceof Error ? err.message : 'Error creating alert' }\n    }\n  }\n\n  const updateAlert = async (id: string, updates: Partial<HazardAlert>) => {\n    try {\n      const { data, error } = await supabase\n        .from('hazard_alerts')\n        .update(updates)\n        .eq('id', id)\n        .select()\n        .single()\n\n      if (error) throw error\n      return { data, error: null }\n    } catch (err) {\n      return { data: null, error: err instanceof Error ? err.message : 'Error updating alert' }\n    }\n  }\n\n  return {\n    alerts,\n    loading,\n    error,\n    isOnline,\n    fetchAlerts,\n    getActiveAlerts,\n    getAlertsByType,\n    getAlertsBySeverity,\n    createAlert,\n    updateAlert,\n  }\n}","import { useTranslation } from 'react-i18next'\nimport { Bell, Globe, LogOut, User, Wifi, WifiOff } from 'lucide-react'\nimport { useAuth } from '../../hooks/useAuth'\nimport { useAlerts } from '../../hooks/useAlerts'\nimport { useOfflineData } from '../../hooks/useOfflineData'\n\ninterface HeaderProps {\n  onLanguageChange: (lang: string) => void\n  currentLanguage: string\n}\n\nexport function Header({ onLanguageChange, currentLanguage }: HeaderProps) {\n  const { t } = useTranslation()\n  const { user, profile, signOut } = useAuth()\n  const { getActiveAlerts } = useAlerts()\n  const { isOnline } = useOfflineData('app')\n  \n  const activeAlerts = getActiveAlerts()\n  const criticalAlerts = activeAlerts.filter(alert => alert.severity === 'critical')\n\n  const languages = [\n    { code: 'en', name: 'English' },\n    { code: 'es', name: 'Español' },\n    { code: 'fr', name: 'Français' },\n  ]\n\n  return (\n    <header className=\"bg-white shadow-sm border-b border-gray-200\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* Logo and Title */}\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-8 h-8 bg-ocean-600 rounded-lg flex items-center justify-center\">\n                <span className=\"text-white font-bold text-sm\">AA</span>\n              </div>\n            </div>\n            <div>\n              <h1 className=\"text-xl font-semibold text-gray-900\">\n                {t('oceanMonitoring')}\n              </h1>\n            </div>\n          </div>\n\n          {/* Status and Actions */}\n          <div className=\"flex items-center space-x-4\">\n            {/* Network Status */}\n            <div className=\"flex items-center space-x-2\">\n              {isOnline ? (\n                <Wifi className=\"w-5 h-5 text-green-500\" />\n              ) : (\n                <WifiOff className=\"w-5 h-5 text-red-500\" />\n              )}\n              <span className={`text-sm ${isOnline ? 'text-green-600' : 'text-red-600'}`}>\n                {isOnline ? t('online') : t('offline')}\n              </span>\n            </div>\n\n            {/* Alerts */}\n            <div className=\"relative\">\n              <button className=\"relative p-2 text-gray-600 hover:text-gray-900 transition-colors\">\n                <Bell className=\"w-5 h-5\" />\n                {criticalAlerts.length > 0 && (\n                  <span className=\"absolute -top-1 -right-1 bg-danger-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center animate-pulse\">\n                    {criticalAlerts.length}\n                  </span>\n                )}\n              </button>\n            </div>\n\n            {/* Language Selector */}\n            <div className=\"relative\">\n              <select\n                value={currentLanguage}\n                onChange={(e) => onLanguageChange(e.target.value)}\n                className=\"appearance-none bg-transparent border-none text-sm text-gray-600 hover:text-gray-900 focus:outline-none cursor-pointer\"\n              >\n                {languages.map((lang) => (\n                  <option key={lang.code} value={lang.code}>\n                    {lang.name}\n                  </option>\n                ))}\n              </select>\n              <Globe className=\"w-4 h-4 text-gray-400 pointer-events-none absolute right-0 top-1/2 transform -translate-y-1/2\" />\n            </div>\n\n            {/* User Menu */}\n            {user && (\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"flex items-center space-x-2\">\n                  <User className=\"w-5 h-5 text-gray-600\" />\n                  <div className=\"text-sm\">\n                    <div className=\"font-medium text-gray-900\">\n                      {profile?.full_name || user.email}\n                    </div>\n                    <div className=\"text-gray-500 capitalize\">\n                      {profile?.role || 'viewer'}\n                    </div>\n                  </div>\n                </div>\n                \n                <button\n                  onClick={() => signOut()}\n                  className=\"p-2 text-gray-600 hover:text-gray-900 transition-colors\"\n                  title={t('logout')}\n                >\n                  <LogOut className=\"w-5 h-5\" />\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}","import { useTranslation } from 'react-i18next'\nimport { \n  BarChart3, \n  Bell, \n  FileText, \n  Home, \n  Radio, \n  Settings,\n  Activity\n} from 'lucide-react'\nimport { useAuth } from '../../hooks/useAuth'\n\ninterface SidebarProps {\n  activeTab: string\n  onTabChange: (tab: string) => void\n}\n\nexport function Sidebar({ activeTab, onTabChange }: SidebarProps) {\n  const { t } = useTranslation()\n  const { hasRole } = useAuth()\n\n  const menuItems = [\n    {\n      id: 'dashboard',\n      label: t('dashboard'),\n      icon: Home,\n      roles: ['viewer', 'operator', 'admin']\n    },\n    {\n      id: 'sensors',\n      label: t('sensors'),\n      icon: Radio,\n      roles: ['viewer', 'operator', 'admin']\n    },\n    {\n      id: 'alerts',\n      label: t('alerts'),\n      icon: Bell,\n      roles: ['viewer', 'operator', 'admin']\n    },\n    {\n      id: 'analytics',\n      label: 'Analytics',\n      icon: BarChart3,\n      roles: ['operator', 'admin']\n    },\n    {\n      id: 'reports',\n      label: t('reports'),\n      icon: FileText,\n      roles: ['operator', 'admin']\n    },\n    {\n      id: 'system',\n      label: 'System Health',\n      icon: Activity,\n      roles: ['admin']\n    },\n    {\n      id: 'settings',\n      label: t('settings'),\n      icon: Settings,\n      roles: ['admin']\n    }\n  ]\n\n  const visibleItems = menuItems.filter(item => \n    item.roles.some(role => hasRole(role))\n  )\n\n  return (\n    <aside className=\"w-64 bg-white shadow-sm border-r border-gray-200 h-full\">\n      <nav className=\"mt-8\">\n        <div className=\"px-4 space-y-2\">\n          {visibleItems.map((item) => {\n            const Icon = item.icon\n            const isActive = activeTab === item.id\n            \n            return (\n              <button\n                key={item.id}\n                onClick={() => onTabChange(item.id)}\n                className={`w-full flex items-center px-4 py-3 text-sm font-medium rounded-lg transition-colors ${\n                  isActive\n                    ? 'bg-ocean-50 text-ocean-700 border-r-2 border-ocean-600'\n                    : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                }`}\n              >\n                <Icon className={`mr-3 h-5 w-5 ${isActive ? 'text-ocean-600' : 'text-gray-400'}`} />\n                {item.label}\n              </button>\n            )\n          })}\n        </div>\n      </nav>\n    </aside>\n  )\n}","import { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { LogIn, Mail, Lock, AlertCircle } from 'lucide-react'\nimport { useAuth } from '../../hooks/useAuth'\n\nexport function LoginForm() {\n  const { t } = useTranslation()\n  const { signIn } = useAuth()\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setLoading(true)\n    setError(null)\n\n    const { error } = await signIn(email, password)\n    \n    if (error) {\n      setError(error.message)\n    }\n    \n    setLoading(false)\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-ocean-50 to-ocean-100 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div className=\"text-center\">\n          <div className=\"mx-auto h-16 w-16 bg-ocean-600 rounded-full flex items-center justify-center\">\n            <span className=\"text-white font-bold text-xl\">AA</span>\n          </div>\n          <h2 className=\"mt-6 text-3xl font-bold text-gray-900\">\n            {t('oceanMonitoring')}\n          </h2>\n          <p className=\"mt-2 text-sm text-gray-600\">\n            Sign in to access the monitoring dashboard\n          </p>\n        </div>\n\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          {error && (\n            <div className=\"alert-critical\">\n              <div className=\"flex items-center\">\n                <AlertCircle className=\"w-5 h-5 text-danger-500 mr-2\" />\n                <span className=\"text-danger-700\">{error}</span>\n              </div>\n            </div>\n          )}\n\n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                {t('email')}\n              </label>\n              <div className=\"mt-1 relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <Mail className=\"h-5 w-5 text-gray-400\" />\n                </div>\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  required\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-ocean-500 focus:border-ocean-500\"\n                  placeholder=\"Enter your email\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                {t('password')}\n              </label>\n              <div className=\"mt-1 relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <Lock className=\"h-5 w-5 text-gray-400\" />\n                </div>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  required\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-ocean-500 focus:border-ocean-500\"\n                  placeholder=\"Enter your password\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-lg text-white bg-ocean-600 hover:bg-ocean-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-ocean-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n            >\n              <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                <LogIn className=\"h-5 w-5 text-ocean-500 group-hover:text-ocean-400\" />\n              </span>\n              {loading ? 'Signing in...' : t('signIn')}\n            </button>\n          </div>\n\n          <div className=\"text-center\">\n            <p className=\"text-sm text-gray-600\">\n              Demo credentials: admin@aquaalert.com / admin123\n            </p>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}","interface LoadingSpinnerProps {\n  size?: 'sm' | 'md' | 'lg'\n  className?: string\n}\n\nexport function LoadingSpinner({ size = 'md', className = '' }: LoadingSpinnerProps) {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-8 h-8',\n    lg: 'w-12 h-12'\n  }\n\n  return (\n    <div className={`animate-spin rounded-full border-2 border-gray-300 border-t-ocean-600 ${sizeClasses[size]} ${className}`} />\n  )\n}","import React from 'react'\n\ninterface StatsCardProps {\n  title: string\n  value: string | number\n  icon: React.ElementType\n  trend?: {\n    value: number\n    isPositive: boolean\n  }\n  color?: 'blue' | 'green' | 'red' | 'yellow'\n}\n\nexport function StatsCard({ title, value, icon: Icon, trend, color = 'blue' }: StatsCardProps) {\n  const colorClasses = {\n    blue: 'bg-ocean-50 text-ocean-600',\n    green: 'bg-green-50 text-green-600',\n    red: 'bg-red-50 text-red-600',\n    yellow: 'bg-yellow-50 text-yellow-600',\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <p className=\"text-sm font-medium text-gray-600\">{title}</p>\n          <p className=\"text-2xl font-semibold text-gray-900 mt-1\">{value}</p>\n          {trend && (\n            <div className=\"flex items-center mt-2\">\n              <span className={`text-sm font-medium ${\n                trend.isPositive ? 'text-green-600' : 'text-red-600'\n              }`}>\n                {trend.isPositive ? '+' : ''}{trend.value}%\n              </span>\n              <span className=\"text-sm text-gray-500 ml-1\">vs last week</span>\n            </div>\n          )}\n        </div>\n        <div className={`p-3 rounded-lg ${colorClasses[color]}`}>\n          <Icon className=\"w-6 h-6\" />\n        </div>\n      </div>\n    </div>\n  )\n}","import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts'\nimport { SensorReading } from '../../lib/supabase'\n\ninterface RealtimeChartProps {\n  data: SensorReading[]\n  parameter: keyof Pick<SensorReading, 'ph' | 'temperature' | 'turbidity' | 'dissolved_oxygen' | 'conductivity' | 'salinity' | 'water_level'>\n  title: string\n  unit: string\n  color?: string\n}\n\nexport function RealtimeChart({ data, parameter, title, unit, color = '#0ea5e9' }: RealtimeChartProps) {\n  const chartData = data\n    .slice(0, 50) // Last 50 readings\n    .reverse()\n    .map(reading => ({\n      time: new Date(reading.timestamp).toLocaleTimeString(),\n      value: reading[parameter],\n      timestamp: reading.timestamp\n    }))\n\n  const formatTooltip = (value: any) => {\n    return [`${value} ${unit}`, title]\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">{title}</h3>\n        <p className=\"text-sm text-gray-600\">Real-time monitoring</p>\n      </div>\n      \n      <div className=\"chart-container\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <LineChart data={chartData}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n            <XAxis \n              dataKey=\"time\" \n              stroke=\"#6b7280\"\n              fontSize={12}\n              tickLine={false}\n            />\n            <YAxis \n              stroke=\"#6b7280\"\n              fontSize={12}\n              tickLine={false}\n              axisLine={false}\n            />\n            <Tooltip \n              formatter={formatTooltip}\n              labelStyle={{ color: '#374151' }}\n              contentStyle={{\n                backgroundColor: 'white',\n                border: '1px solid #e5e7eb',\n                borderRadius: '8px',\n                boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\n              }}\n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"value\" \n              stroke={color}\n              strokeWidth={2}\n              dot={false}\n              activeDot={{ r: 4, fill: color }}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  )\n}","import { useTranslation } from 'react-i18next'\nimport { AlertTriangle, CheckCircle, Clock, MapPin } from 'lucide-react'\nimport { HazardAlert } from '../../lib/supabase'\nimport { useAlerts } from '../../hooks/useAlerts'\n\nexport function AlertsPanel() {\n  const { t } = useTranslation()\n  const { getActiveAlerts } = useAlerts()\n  \n  const activeAlerts = getActiveAlerts().slice(0, 5) // Show latest 5\n\n  const getSeverityColor = (severity: HazardAlert['severity']) => {\n    switch (severity) {\n      case 'critical': return 'text-red-600 bg-red-50 border-red-200'\n      case 'high': return 'text-orange-600 bg-orange-50 border-orange-200'\n      case 'medium': return 'text-yellow-600 bg-yellow-50 border-yellow-200'\n      case 'low': return 'text-blue-600 bg-blue-50 border-blue-200'\n      default: return 'text-gray-600 bg-gray-50 border-gray-200'\n    }\n  }\n\n  const getSeverityIcon = (severity: HazardAlert['severity']) => {\n    switch (severity) {\n      case 'critical':\n      case 'high':\n        return <AlertTriangle className=\"w-4 h-4\" />\n      case 'medium':\n        return <Clock className=\"w-4 h-4\" />\n      case 'low':\n        return <CheckCircle className=\"w-4 h-4\" />\n      default:\n        return <AlertTriangle className=\"w-4 h-4\" />\n    }\n  }\n\n  const getHazardTypeLabel = (type: HazardAlert['type']) => {\n    const labels = {\n      tsunami: t('tsunami'),\n      high_waves: t('highWaves'),\n      oil_spill: t('oilSpill'),\n      chemical_pollution: t('chemicalPollution'),\n      biological_pollution: t('biologicalPollution'),\n    }\n    return labels[type] || type\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">{t('activeAlerts')}</h3>\n        <span className=\"text-sm text-gray-500\">\n          {activeAlerts.length} active\n        </span>\n      </div>\n\n      {activeAlerts.length === 0 ? (\n        <div className=\"text-center py-8\">\n          <CheckCircle className=\"w-12 h-12 text-green-500 mx-auto mb-3\" />\n          <p className=\"text-gray-600\">{t('noActiveAlerts')}</p>\n        </div>\n      ) : (\n        <div className=\"space-y-3\">\n          {activeAlerts.map((alert) => (\n            <div\n              key={alert.id}\n              className={`p-3 rounded-lg border ${getSeverityColor(alert.severity)}`}\n            >\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex items-start space-x-3\">\n                  <div className=\"flex-shrink-0 mt-0.5\">\n                    {getSeverityIcon(alert.severity)}\n                  </div>\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-center space-x-2 mb-1\">\n                      <span className=\"text-sm font-medium\">\n                        {getHazardTypeLabel(alert.type)}\n                      </span>\n                      <span className={`px-2 py-0.5 text-xs font-medium rounded-full ${getSeverityColor(alert.severity)}`}>\n                        {t(alert.severity)}\n                      </span>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-2\">{alert.title}</p>\n                    <div className=\"flex items-center text-xs text-gray-500\">\n                      <MapPin className=\"w-3 h-3 mr-1\" />\n                      <span>\n                        {alert.location_lat.toFixed(4)}, {alert.location_lng.toFixed(4)}\n                      </span>\n                      <span className=\"mx-2\">•</span>\n                      <span>\n                        {new Date(alert.created_at).toLocaleString()}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n}","import { useEffect, useRef } from 'react'\nimport L from 'leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport { Sensor, SensorReading } from '../../lib/supabase'\n\n// Fix for default markers in Leaflet\ndelete (L.Icon.Default.prototype as any)._getIconUrl\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n})\n\ninterface SensorMapProps {\n  sensors: Sensor[]\n  readings: SensorReading[]\n  onSensorClick?: (sensor: Sensor) => void\n}\n\nexport function SensorMap({ sensors, readings, onSensorClick }: SensorMapProps) {\n  const mapRef = useRef<HTMLDivElement>(null)\n  const mapInstanceRef = useRef<L.Map | null>(null)\n  const markersRef = useRef<L.Marker[]>([])\n\n  useEffect(() => {\n    if (!mapRef.current) return\n\n    // Initialize map\n    if (!mapInstanceRef.current) {\n      mapInstanceRef.current = L.map(mapRef.current).setView([0, 0], 2)\n      \n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '© OpenStreetMap contributors'\n      }).addTo(mapInstanceRef.current)\n    }\n\n    // Clear existing markers\n    markersRef.current.forEach(marker => {\n      mapInstanceRef.current?.removeLayer(marker)\n    })\n    markersRef.current = []\n\n    // Add sensor markers\n    sensors.forEach(sensor => {\n      if (!mapInstanceRef.current) return\n\n      const latestReading = readings.find(r => r.sensor_id === sensor.id)\n      \n      // Create custom icon based on sensor status\n      const iconColor = sensor.is_active ? \n        (latestReading ? '#10b981' : '#f59e0b') : '#ef4444'\n      \n      const customIcon = L.divIcon({\n        html: `\n          <div style=\"\n            background-color: ${iconColor};\n            width: 20px;\n            height: 20px;\n            border-radius: 50%;\n            border: 3px solid white;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n          \"></div>\n        `,\n        className: 'custom-sensor-marker',\n        iconSize: [20, 20],\n        iconAnchor: [10, 10]\n      })\n\n      const marker = L.marker([sensor.location_lat, sensor.location_lng], {\n        icon: customIcon\n      }).addTo(mapInstanceRef.current)\n\n      // Create popup content\n      const popupContent = `\n        <div class=\"p-2\">\n          <h3 class=\"font-semibold text-gray-900 mb-2\">${sensor.name}</h3>\n          <div class=\"space-y-1 text-sm\">\n            <div class=\"flex justify-between\">\n              <span class=\"text-gray-600\">Status:</span>\n              <span class=\"${sensor.is_active ? 'text-green-600' : 'text-red-600'}\">\n                ${sensor.is_active ? 'Active' : 'Inactive'}\n              </span>\n            </div>\n            ${latestReading ? `\n              <div class=\"flex justify-between\">\n                <span class=\"text-gray-600\">Last Reading:</span>\n                <span class=\"text-gray-900\">\n                  ${new Date(latestReading.timestamp).toLocaleString()}\n                </span>\n              </div>\n              <div class=\"mt-2 pt-2 border-t border-gray-200\">\n                <div class=\"grid grid-cols-2 gap-2 text-xs\">\n                  <div>pH: ${latestReading.ph.toFixed(2)}</div>\n                  <div>Temp: ${latestReading.temperature.toFixed(1)}°C</div>\n                  <div>DO: ${latestReading.dissolved_oxygen.toFixed(2)} mg/L</div>\n                  <div>Turbidity: ${latestReading.turbidity.toFixed(1)} NTU</div>\n                </div>\n              </div>\n            ` : '<div class=\"text-gray-500 text-sm\">No recent data</div>'}\n          </div>\n        </div>\n      `\n\n      marker.bindPopup(popupContent)\n      \n      if (onSensorClick) {\n        marker.on('click', () => onSensorClick(sensor))\n      }\n\n      markersRef.current.push(marker)\n    })\n\n    // Fit map to show all sensors\n    if (sensors.length > 0) {\n      const group = new L.FeatureGroup(markersRef.current)\n      mapInstanceRef.current.fitBounds(group.getBounds().pad(0.1))\n    }\n\n    return () => {\n      // Cleanup on unmount\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove()\n        mapInstanceRef.current = null\n      }\n    }\n  }, [sensors, readings, onSensorClick])\n\n  return (\n    <div className=\"card\">\n      <div className=\"mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Sensor Locations</h3>\n        <p className=\"text-sm text-gray-600\">\n          {sensors.filter(s => s.is_active).length} of {sensors.length} sensors active\n        </p>\n      </div>\n      <div \n        ref={mapRef} \n        className=\"map-container\"\n        style={{ minHeight: '400px' }}\n      />\n    </div>\n  )\n}","import { useState, useEffect } from 'react'\nimport { supabase, SensorReading, Sensor } from '../lib/supabase'\nimport { useOfflineData } from './useOfflineData'\n\nexport function useSensorData() {\n  const [sensors, setSensors] = useState<Sensor[]>([])\n  const [readings, setReadings] = useState<SensorReading[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const { data: cachedData, isOnline, cacheData } = useOfflineData('sensors')\n\n  useEffect(() => {\n    fetchSensors()\n    fetchRecentReadings()\n\n    // Set up real-time subscription\n    const subscription = supabase\n      .channel('sensor_readings')\n      .on('postgres_changes', \n        { event: 'INSERT', schema: 'public', table: 'sensor_readings' },\n        (payload) => {\n          setReadings(prev => [payload.new as SensorReading, ...prev.slice(0, 999)])\n        }\n      )\n      .subscribe()\n\n    return () => {\n      subscription.unsubscribe()\n    }\n  }, [])\n\n  const fetchSensors = async () => {\n    try {\n      if (!isOnline && cachedData?.sensors) {\n        setSensors(cachedData.sensors)\n        return\n      }\n\n      const { data, error } = await supabase\n        .from('sensors')\n        .select('*')\n        .order('name')\n\n      if (error) throw error\n\n      setSensors(data || [])\n      if (isOnline) {\n        cacheData({ ...cachedData, sensors: data || [] })\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Error fetching sensors')\n      if (cachedData?.sensors) {\n        setSensors(cachedData.sensors)\n      }\n    }\n  }\n\n  const fetchRecentReadings = async () => {\n    try {\n      setLoading(true)\n      \n      if (!isOnline && cachedData?.readings) {\n        setReadings(cachedData.readings)\n        setLoading(false)\n        return\n      }\n\n      const { data, error } = await supabase\n        .from('sensor_readings')\n        .select('*')\n        .order('timestamp', { ascending: false })\n        .limit(1000)\n\n      if (error) throw error\n\n      setReadings(data || [])\n      if (isOnline) {\n        cacheData({ ...cachedData, readings: data || [] })\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Error fetching readings')\n      if (cachedData?.readings) {\n        setReadings(cachedData.readings)\n      }\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const getReadingsBySensor = (sensorId: string, hours: number = 24) => {\n    const cutoff = new Date(Date.now() - hours * 60 * 60 * 1000)\n    return readings.filter(reading => \n      reading.sensor_id === sensorId && \n      new Date(reading.timestamp) > cutoff\n    )\n  }\n\n  const getLatestReading = (sensorId: string) => {\n    return readings.find(reading => reading.sensor_id === sensorId)\n  }\n\n  return {\n    sensors,\n    readings,\n    loading,\n    error,\n    isOnline,\n    fetchSensors,\n    fetchRecentReadings,\n    getReadingsBySensor,\n    getLatestReading,\n  }\n}","import { useTranslation } from 'react-i18next'\nimport { Activity, AlertTriangle, Database, Radio } from 'lucide-react'\nimport { StatsCard } from '../components/Dashboard/StatsCard'\nimport { RealtimeChart } from '../components/Dashboard/RealtimeChart'\nimport { AlertsPanel } from '../components/Dashboard/AlertsPanel'\nimport { SensorMap } from '../components/Sensors/SensorMap'\nimport { useSensorData } from '../hooks/useSensorData'\nimport { useAlerts } from '../hooks/useAlerts'\n\nexport function Dashboard() {\n  const { t } = useTranslation()\n  const { sensors, readings, loading: sensorsLoading } = useSensorData()\n  const { getActiveAlerts } = useAlerts()\n\n  const activeSensors = sensors.filter(sensor => sensor.is_active)\n  const activeAlerts = getActiveAlerts()\n  const todayReadings = readings.filter(reading => {\n    const today = new Date()\n    const readingDate = new Date(reading.timestamp)\n    return readingDate.toDateString() === today.toDateString()\n  })\n\n  if (sensorsLoading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {[...Array(4)].map((_, i) => (\n            <div key={i} className=\"card\">\n              <div className=\"skeleton h-20 w-full\"></div>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <StatsCard\n          title={t('activeSensors')}\n          value={activeSensors.length}\n          icon={Radio}\n          color=\"green\"\n          trend={{ value: 5, isPositive: true }}\n        />\n        <StatsCard\n          title={t('activeAlerts')}\n          value={activeAlerts.length}\n          icon={AlertTriangle}\n          color={activeAlerts.length > 0 ? 'red' : 'green'}\n        />\n        <StatsCard\n          title={t('dataPoints')}\n          value={todayReadings.length}\n          icon={Database}\n          color=\"blue\"\n          trend={{ value: 12, isPositive: true }}\n        />\n        <StatsCard\n          title={t('systemStatus')}\n          value={t('online')}\n          icon={Activity}\n          color=\"green\"\n        />\n      </div>\n\n      {/* Main Content Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Charts Column */}\n        <div className=\"lg:col-span-2 space-y-6\">\n          <RealtimeChart\n            data={readings.slice(0, 50)}\n            parameter=\"ph\"\n            title={t('ph')}\n            unit=\"\"\n            color=\"#0ea5e9\"\n          />\n          \n          <RealtimeChart\n            data={readings.slice(0, 50)}\n            parameter=\"temperature\"\n            title={t('temperature')}\n            unit=\"°C\"\n            color=\"#f59e0b\"\n          />\n          \n          <RealtimeChart\n            data={readings.slice(0, 50)}\n            parameter=\"dissolved_oxygen\"\n            title={t('dissolvedOxygen')}\n            unit=\"mg/L\"\n            color=\"#10b981\"\n          />\n        </div>\n\n        {/* Alerts Panel */}\n        <div className=\"space-y-6\">\n          <AlertsPanel />\n        </div>\n      </div>\n\n      {/* Map */}\n      <div className=\"grid grid-cols-1\">\n        <SensorMap\n          sensors={sensors}\n          readings={readings}\n        />\n      </div>\n    </div>\n  )\n}","import { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { Radio, MapPin, Clock } from 'lucide-react'\nimport { SensorMap } from '../components/Sensors/SensorMap'\nimport { RealtimeChart } from '../components/Dashboard/RealtimeChart'\nimport { useSensorData } from '../hooks/useSensorData'\nimport { Sensor } from '../lib/supabase'\n\nexport function Sensors() {\n  const { t } = useTranslation()\n  const { sensors, readings, loading, getLatestReading, getReadingsBySensor } = useSensorData()\n  const [selectedSensor, setSelectedSensor] = useState<Sensor | null>(null)\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"skeleton h-8 w-48\"></div>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <div className=\"skeleton h-96\"></div>\n          <div className=\"skeleton h-96\"></div>\n        </div>\n      </div>\n    )\n  }\n\n  const getSensorStatus = (sensor: Sensor) => {\n    if (!sensor.is_active) return { status: 'offline', color: 'text-red-600 bg-red-50' }\n    \n    const latestReading = getLatestReading(sensor.id)\n    if (!latestReading) return { status: 'no_data', color: 'text-yellow-600 bg-yellow-50' }\n    \n    const lastReadingTime = new Date(latestReading.timestamp)\n    const now = new Date()\n    const timeDiff = now.getTime() - lastReadingTime.getTime()\n    const hoursDiff = timeDiff / (1000 * 60 * 60)\n    \n    if (hoursDiff > 2) return { status: 'stale', color: 'text-yellow-600 bg-yellow-50' }\n    return { status: 'online', color: 'text-green-600 bg-green-50' }\n  }\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'online': return t('online')\n      case 'offline': return t('offline')\n      case 'stale': return 'Stale Data'\n      case 'no_data': return 'No Data'\n      default: return 'Unknown'\n    }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">{t('sensors')}</h1>\n          <p className=\"text-gray-600\">\n            {sensors.filter(s => s.is_active).length} of {sensors.length} sensors active\n          </p>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Sensor Map */}\n        <SensorMap\n          sensors={sensors}\n          readings={readings}\n          onSensorClick={setSelectedSensor}\n        />\n\n        {/* Sensor List */}\n        <div className=\"card\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Sensor Status</h3>\n          <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n            {sensors.map((sensor) => {\n              const { status, color } = getSensorStatus(sensor)\n              const latestReading = getLatestReading(sensor.id)\n              \n              return (\n                <div\n                  key={sensor.id}\n                  className={`p-4 rounded-lg border cursor-pointer transition-colors ${\n                    selectedSensor?.id === sensor.id \n                      ? 'border-ocean-300 bg-ocean-50' \n                      : 'border-gray-200 hover:border-gray-300'\n                  }`}\n                  onClick={() => setSelectedSensor(sensor)}\n                >\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <div className=\"flex items-center space-x-3\">\n                      <Radio className=\"w-5 h-5 text-gray-600\" />\n                      <span className=\"font-medium text-gray-900\">{sensor.name}</span>\n                    </div>\n                    <span className={`px-2 py-1 text-xs font-medium rounded-full ${color}`}>\n                      {getStatusText(status)}\n                    </span>\n                  </div>\n                  \n                  <div className=\"flex items-center text-sm text-gray-600 space-x-4\">\n                    <div className=\"flex items-center space-x-1\">\n                      <MapPin className=\"w-4 h-4\" />\n                      <span>{sensor.location_lat.toFixed(4)}, {sensor.location_lng.toFixed(4)}</span>\n                    </div>\n                    {latestReading && (\n                      <div className=\"flex items-center space-x-1\">\n                        <Clock className=\"w-4 h-4\" />\n                        <span>{new Date(latestReading.timestamp).toLocaleString()}</span>\n                      </div>\n                    )}\n                  </div>\n                  \n                  {latestReading && (\n                    <div className=\"mt-3 grid grid-cols-2 gap-2 text-xs\">\n                      <div>pH: {latestReading.ph.toFixed(2)}</div>\n                      <div>Temp: {latestReading.temperature.toFixed(1)}°C</div>\n                      <div>DO: {latestReading.dissolved_oxygen.toFixed(2)} mg/L</div>\n                      <div>Turbidity: {latestReading.turbidity.toFixed(1)} NTU</div>\n                    </div>\n                  )}\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* Selected Sensor Details */}\n      {selectedSensor && (\n        <div className=\"space-y-6\">\n          <div className=\"card\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">\n                {selectedSensor.name} - Detailed View\n              </h3>\n              <button\n                onClick={() => setSelectedSensor(null)}\n                className=\"text-gray-500 hover:text-gray-700\"\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n              {(() => {\n                const latestReading = getLatestReading(selectedSensor.id)\n                if (!latestReading) return <p className=\"text-gray-500\">No recent data available</p>\n                \n                return (\n                  <>\n                    <div className=\"text-center p-3 bg-gray-50 rounded-lg\">\n                      <div className=\"text-2xl font-bold text-ocean-600\">{latestReading.ph.toFixed(2)}</div>\n                      <div className=\"text-sm text-gray-600\">pH Level</div>\n                    </div>\n                    <div className=\"text-center p-3 bg-gray-50 rounded-lg\">\n                      <div className=\"text-2xl font-bold text-orange-600\">{latestReading.temperature.toFixed(1)}°C</div>\n                      <div className=\"text-sm text-gray-600\">Temperature</div>\n                    </div>\n                    <div className=\"text-center p-3 bg-gray-50 rounded-lg\">\n                      <div className=\"text-2xl font-bold text-green-600\">{latestReading.dissolved_oxygen.toFixed(2)}</div>\n                      <div className=\"text-sm text-gray-600\">DO (mg/L)</div>\n                    </div>\n                    <div className=\"text-center p-3 bg-gray-50 rounded-lg\">\n                      <div className=\"text-2xl font-bold text-blue-600\">{latestReading.turbidity.toFixed(1)}</div>\n                      <div className=\"text-sm text-gray-600\">Turbidity (NTU)</div>\n                    </div>\n                  </>\n                )\n              })()}\n            </div>\n          </div>\n\n          {/* Charts for selected sensor */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            <RealtimeChart\n              data={getReadingsBySensor(selectedSensor.id, 24)}\n              parameter=\"ph\"\n              title=\"pH Level - 24h\"\n              unit=\"\"\n              color=\"#0ea5e9\"\n            />\n            <RealtimeChart\n              data={getReadingsBySensor(selectedSensor.id, 24)}\n              parameter=\"temperature\"\n              title=\"Temperature - 24h\"\n              unit=\"°C\"\n              color=\"#f59e0b\"\n            />\n            <RealtimeChart\n              data={getReadingsBySensor(selectedSensor.id, 24)}\n              parameter=\"dissolved_oxygen\"\n              title=\"Dissolved Oxygen - 24h\"\n              unit=\"mg/L\"\n              color=\"#10b981\"\n            />\n            <RealtimeChart\n              data={getReadingsBySensor(selectedSensor.id, 24)}\n              parameter=\"turbidity\"\n              title=\"Turbidity - 24h\"\n              unit=\"NTU\"\n              color=\"#8b5cf6\"\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}","import { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { AlertTriangle, CheckCircle, Clock, MapPin, Filter, Search } from 'lucide-react'\nimport { useAlerts } from '../hooks/useAlerts'\nimport { HazardAlert } from '../lib/supabase'\n\nexport function Alerts() {\n  const { t } = useTranslation()\n  const { alerts, loading } = useAlerts()\n  const [filter, setFilter] = useState<'all' | 'active' | 'resolved'>('all')\n  const [severityFilter, setSeverityFilter] = useState<'all' | HazardAlert['severity']>('all')\n  const [searchTerm, setSearchTerm] = useState('')\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"skeleton h-8 w-48\"></div>\n        <div className=\"space-y-4\">\n          {[...Array(5)].map((_, i) => (\n            <div key={i} className=\"skeleton h-24 w-full\"></div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n\n  const filteredAlerts = alerts.filter(alert => {\n    const matchesFilter = filter === 'all' || \n      (filter === 'active' && alert.is_active) ||\n      (filter === 'resolved' && !alert.is_active)\n    \n    const matchesSeverity = severityFilter === 'all' || alert.severity === severityFilter\n    \n    const matchesSearch = searchTerm === '' || \n      alert.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      alert.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      alert.type.toLowerCase().includes(searchTerm.toLowerCase())\n    \n    return matchesFilter && matchesSeverity && matchesSearch\n  })\n\n  const getSeverityColor = (severity: HazardAlert['severity']) => {\n    switch (severity) {\n      case 'critical': return 'text-red-600 bg-red-50 border-red-200'\n      case 'high': return 'text-orange-600 bg-orange-50 border-orange-200'\n      case 'medium': return 'text-yellow-600 bg-yellow-50 border-yellow-200'\n      case 'low': return 'text-blue-600 bg-blue-50 border-blue-200'\n      default: return 'text-gray-600 bg-gray-50 border-gray-200'\n    }\n  }\n\n  const getSeverityIcon = (severity: HazardAlert['severity']) => {\n    switch (severity) {\n      case 'critical':\n      case 'high':\n        return <AlertTriangle className=\"w-5 h-5\" />\n      case 'medium':\n        return <Clock className=\"w-5 h-5\" />\n      case 'low':\n        return <CheckCircle className=\"w-5 h-5\" />\n      default:\n        return <AlertTriangle className=\"w-5 h-5\" />\n    }\n  }\n\n  const getHazardTypeLabel = (type: HazardAlert['type']) => {\n    const labels = {\n      tsunami: t('tsunami'),\n      high_waves: t('highWaves'),\n      oil_spill: t('oilSpill'),\n      chemical_pollution: t('chemicalPollution'),\n      biological_pollution: t('biologicalPollution'),\n    }\n    return labels[type] || type\n  }\n\n  const getHazardTypeColor = (type: HazardAlert['type']) => {\n    switch (type) {\n      case 'tsunami': return 'bg-red-100 text-red-800'\n      case 'high_waves': return 'bg-blue-100 text-blue-800'\n      case 'oil_spill': return 'bg-gray-100 text-gray-800'\n      case 'chemical_pollution': return 'bg-purple-100 text-purple-800'\n      case 'biological_pollution': return 'bg-green-100 text-green-800'\n      default: return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">{t('alerts')}</h1>\n          <p className=\"text-gray-600\">\n            {alerts.filter(a => a.is_active).length} active alerts, {alerts.length} total\n          </p>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"card\">\n        <div className=\"flex flex-wrap gap-4 items-center\">\n          <div className=\"flex items-center space-x-2\">\n            <Filter className=\"w-5 h-5 text-gray-600\" />\n            <span className=\"text-sm font-medium text-gray-700\">Filters:</span>\n          </div>\n          \n          <select\n            value={filter}\n            onChange={(e) => setFilter(e.target.value as any)}\n            className=\"px-3 py-1 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-ocean-500 focus:border-ocean-500\"\n          >\n            <option value=\"all\">All Alerts</option>\n            <option value=\"active\">Active Only</option>\n            <option value=\"resolved\">Resolved Only</option>\n          </select>\n\n          <select\n            value={severityFilter}\n            onChange={(e) => setSeverityFilter(e.target.value as any)}\n            className=\"px-3 py-1 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-ocean-500 focus:border-ocean-500\"\n          >\n            <option value=\"all\">All Severities</option>\n            <option value=\"critical\">Critical</option>\n            <option value=\"high\">High</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"low\">Low</option>\n          </select>\n\n          <div className=\"flex-1 max-w-md\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n              <input\n                type=\"text\"\n                placeholder=\"Search alerts...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full pl-10 pr-3 py-1 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-ocean-500 focus:border-ocean-500\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Alerts List */}\n      <div className=\"space-y-4\">\n        {filteredAlerts.length === 0 ? (\n          <div className=\"card text-center py-12\">\n            <CheckCircle className=\"w-12 h-12 text-green-500 mx-auto mb-3\" />\n            <p className=\"text-gray-600\">No alerts match your current filters</p>\n          </div>\n        ) : (\n          filteredAlerts.map((alert) => (\n            <div\n              key={alert.id}\n              className={`card border-l-4 ${\n                alert.is_active \n                  ? getSeverityColor(alert.severity).replace('bg-', 'border-').split(' ')[0]\n                  : 'border-gray-300'\n              } ${!alert.is_active ? 'opacity-75' : ''}`}\n            >\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex items-start space-x-4 flex-1\">\n                  <div className={`p-2 rounded-lg ${getSeverityColor(alert.severity)}`}>\n                    {getSeverityIcon(alert.severity)}\n                  </div>\n                  \n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-center space-x-3 mb-2\">\n                      <span className={`px-2 py-1 text-xs font-medium rounded-full ${getHazardTypeColor(alert.type)}`}>\n                        {getHazardTypeLabel(alert.type)}\n                      </span>\n                      <span className={`px-2 py-1 text-xs font-medium rounded-full ${getSeverityColor(alert.severity)}`}>\n                        {t(alert.severity)}\n                      </span>\n                      {!alert.is_active && (\n                        <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-600\">\n                          Resolved\n                        </span>\n                      )}\n                    </div>\n                    \n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                      {alert.title}\n                    </h3>\n                    \n                    <p className=\"text-gray-700 mb-3\">\n                      {alert.description}\n                    </p>\n                    \n                    <div className=\"flex items-center text-sm text-gray-500 space-x-4\">\n                      <div className=\"flex items-center space-x-1\">\n                        <MapPin className=\"w-4 h-4\" />\n                        <span>\n                          {alert.location_lat.toFixed(4)}, {alert.location_lng.toFixed(4)}\n                        </span>\n                      </div>\n                      <div className=\"flex items-center space-x-1\">\n                        <Clock className=\"w-4 h-4\" />\n                        <span>\n                          {new Date(alert.created_at).toLocaleString()}\n                        </span>\n                      </div>\n                      <div>\n                        Radius: {alert.affected_radius}km\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center space-x-2\">\n                  <button className=\"btn-secondary text-sm\">\n                    {t('viewDetails')}\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  )\n}","import { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { Download, FileText } from 'lucide-react'\nimport jsPDF from 'jspdf'\nimport { SensorReading, HazardAlert } from '../../lib/supabase'\nimport { useSensorData } from '../../hooks/useSensorData'\nimport { useAlerts } from '../../hooks/useAlerts'\n\nexport function ReportGenerator() {\n  const { t } = useTranslation()\n  const { readings } = useSensorData()\n  const { alerts } = useAlerts()\n  const [reportType, setReportType] = useState<'daily' | 'weekly' | 'monthly'>('daily')\n  const [dateRange, setDateRange] = useState({\n    start: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n    end: new Date().toISOString().split('T')[0]\n  })\n  const [generating, setGenerating] = useState(false)\n\n  const generatePDFReport = async () => {\n    setGenerating(true)\n    try {\n      const pdf = new jsPDF()\n      const pageHeight = pdf.internal.pageSize.getHeight()\n      \n      // Title\n      pdf.setFontSize(20)\n      pdf.text('Aqua Alert - Ocean Monitoring Report', 20, 30)\n      \n      // Date range\n      pdf.setFontSize(12)\n      pdf.text(`Report Period: ${dateRange.start} to ${dateRange.end}`, 20, 45)\n      \n      // Filter data by date range\n      const startDate = new Date(dateRange.start)\n      const endDate = new Date(dateRange.end)\n      endDate.setHours(23, 59, 59, 999)\n      \n      const filteredReadings: SensorReading[] = readings.filter(reading => {\n        const readingDate = new Date(reading.timestamp)\n        return readingDate >= startDate && readingDate <= endDate\n      })\n      \n      const filteredAlerts: HazardAlert[] = alerts.filter(alert => {\n        const alertDate = new Date(alert.created_at)\n        return alertDate >= startDate && alertDate <= endDate\n      })\n\n      // Summary statistics\n      let yPosition = 65\n      pdf.setFontSize(16)\n      pdf.text('Summary', 20, yPosition)\n      yPosition += 15\n      \n      pdf.setFontSize(12)\n      pdf.text(`Total Sensor Readings: ${filteredReadings.length}`, 20, yPosition)\n      yPosition += 10\n      pdf.text(`Total Alerts: ${filteredAlerts.length}`, 20, yPosition)\n      yPosition += 10\n      pdf.text(`Critical Alerts: ${filteredAlerts.filter(a => a.severity === 'critical').length}`, 20, yPosition)\n      yPosition += 20\n\n      // Sensor data averages\n      if (filteredReadings.length > 0) {\n        pdf.setFontSize(16)\n        pdf.text('Average Sensor Values', 20, yPosition)\n        yPosition += 15\n        \n        const avgPh = filteredReadings.reduce((sum, r) => sum + r.ph, 0) / filteredReadings.length\n        const avgTemp = filteredReadings.reduce((sum, r) => sum + r.temperature, 0) / filteredReadings.length\n        const avgDO = filteredReadings.reduce((sum, r) => sum + r.dissolved_oxygen, 0) / filteredReadings.length\n        const avgTurbidity = filteredReadings.reduce((sum, r) => sum + r.turbidity, 0) / filteredReadings.length\n        \n        pdf.setFontSize(12)\n        pdf.text(`pH Level: ${avgPh.toFixed(2)}`, 20, yPosition)\n        yPosition += 10\n        pdf.text(`Temperature: ${avgTemp.toFixed(1)}°C`, 20, yPosition)\n        yPosition += 10\n        pdf.text(`Dissolved Oxygen: ${avgDO.toFixed(2)} mg/L`, 20, yPosition)\n        yPosition += 10\n        pdf.text(`Turbidity: ${avgTurbidity.toFixed(1)} NTU`, 20, yPosition)\n        yPosition += 20\n      }\n\n      // Alerts section\n      if (filteredAlerts.length > 0) {\n        pdf.setFontSize(16)\n        pdf.text('Recent Alerts', 20, yPosition)\n        yPosition += 15\n        \n        filteredAlerts.slice(0, 10).forEach(alert => {\n          if (yPosition > pageHeight - 40) {\n            pdf.addPage()\n            yPosition = 30\n          }\n          \n          pdf.setFontSize(12)\n          pdf.text(`${alert.type.toUpperCase()} - ${alert.severity.toUpperCase()}`, 20, yPosition)\n          yPosition += 8\n          pdf.setFontSize(10)\n          pdf.text(alert.title, 25, yPosition)\n          yPosition += 6\n          pdf.text(`Location: ${alert.location_lat.toFixed(4)}, ${alert.location_lng.toFixed(4)}`, 25, yPosition)\n          yPosition += 6\n          pdf.text(`Date: ${new Date(alert.created_at).toLocaleString()}`, 25, yPosition)\n          yPosition += 12\n        })\n      }\n\n      // Footer\n      pdf.setFontSize(8)\n      pdf.text(`Generated on ${new Date().toLocaleString()}`, 20, pageHeight - 20)\n      pdf.text('Aqua Alert - Ocean Hazard Monitoring System', 20, pageHeight - 10)\n      \n      // Save the PDF\n      pdf.save(`aqua-alert-report-${dateRange.start}-to-${dateRange.end}.pdf`)\n      \n    } catch (error) {\n      console.error('Error generating PDF:', error)\n      alert('Error generating PDF report')\n    } finally {\n      setGenerating(false)\n    }\n  }\n\n  const generateCSVReport = () => {\n    setGenerating(true)\n    try {\n      // Filter data by date range\n      const startDate = new Date(dateRange.start)\n      const endDate = new Date(dateRange.end)\n      endDate.setHours(23, 59, 59, 999)\n      \n      const filteredReadings = readings.filter(reading => {\n        const readingDate = new Date(reading.timestamp)\n        return readingDate >= startDate && readingDate <= endDate\n      })\n\n      // Create CSV content\n      const headers = [\n        'Timestamp',\n        'Sensor ID',\n        'pH',\n        'Temperature (°C)',\n        'Turbidity (NTU)',\n        'Dissolved Oxygen (mg/L)',\n        'Conductivity (μS/cm)',\n        'Salinity (PSU)',\n        'Water Level (m)',\n        'Latitude',\n        'Longitude'\n      ]\n\n      const csvContent = [\n        headers.join(','),\n        ...filteredReadings.map(reading => [\n          reading.timestamp,\n          reading.sensor_id,\n          reading.ph,\n          reading.temperature,\n          reading.turbidity,\n          reading.dissolved_oxygen,\n          reading.conductivity,\n          reading.salinity,\n          reading.water_level,\n          reading.location_lat,\n          reading.location_lng\n        ].join(','))\n      ].join('\\n')\n\n      // Download CSV\n      const blob = new Blob([csvContent], { type: 'text/csv' })\n      const url = window.URL.createObjectURL(blob)\n      const a = document.createElement('a')\n      a.href = url\n      a.download = `aqua-alert-data-${dateRange.start}-to-${dateRange.end}.csv`\n      document.body.appendChild(a)\n      a.click()\n      document.body.removeChild(a)\n      window.URL.revokeObjectURL(url)\n      \n    } catch (error) {\n      console.error('Error generating CSV:', error)\n      alert('Error generating CSV report')\n    } finally {\n      setGenerating(false)\n    }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"card\">\n        <div className=\"flex items-center space-x-3 mb-6\">\n          <FileText className=\"w-6 h-6 text-ocean-600\" />\n          <h2 className=\"text-xl font-semibold text-gray-900\">{t('generateReport')}</h2>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          {/* Report Type */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Report Type\n            </label>\n            <select\n              value={reportType}\n              onChange={(e) => setReportType(e.target.value as any)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-ocean-500 focus:border-ocean-500\"\n            >\n              <option value=\"daily\">Daily Report</option>\n              <option value=\"weekly\">Weekly Report</option>\n              <option value=\"monthly\">Monthly Report</option>\n            </select>\n          </div>\n\n          {/* Date Range */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Start Date\n            </label>\n            <input\n              type=\"date\"\n              value={dateRange.start}\n              onChange={(e) => setDateRange(prev => ({ ...prev, start: e.target.value }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-ocean-500 focus:border-ocean-500\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              End Date\n            </label>\n            <input\n              type=\"date\"\n              value={dateRange.end}\n              onChange={(e) => setDateRange(prev => ({ ...prev, end: e.target.value }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-ocean-500 focus:border-ocean-500\"\n            />\n          </div>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"flex flex-wrap gap-4 mt-6\">\n          <button\n            onClick={generatePDFReport}\n            disabled={generating}\n            className=\"btn-primary flex items-center space-x-2\"\n          >\n            <Download className=\"w-4 h-4\" />\n            <span>{generating ? 'Generating...' : 'Download PDF Report'}</span>\n          </button>\n\n          <button\n            onClick={generateCSVReport}\n            disabled={generating}\n            className=\"btn-secondary flex items-center space-x-2\"\n          >\n            <Download className=\"w-4 h-4\" />\n            <span>{generating ? 'Generating...' : 'Export CSV Data'}</span>\n          </button>\n        </div>\n      </div>\n\n      {/* Report Preview */}\n      <div className=\"card\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Report Preview</h3>\n        <div className=\"bg-gray-50 p-4 rounded-lg\">\n          <div className=\"space-y-2 text-sm text-gray-600\">\n            <p><strong>Report Period:</strong> {dateRange.start} to {dateRange.end}</p>\n            <p><strong>Data Points:</strong> {readings.filter(r => {\n              const date = new Date(r.timestamp)\n              return date >= new Date(dateRange.start) && date <= new Date(dateRange.end)\n            }).length}</p>\n            <p><strong>Alerts:</strong> {alerts.filter(a => {\n              const date = new Date(a.created_at)\n              return date >= new Date(dateRange.start) && date <= new Date(dateRange.end)\n            }).length}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import { useTranslation } from 'react-i18next'\nimport { ReportGenerator } from '../components/Reports/ReportGenerator'\n\nexport function Reports() {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-2xl font-bold text-gray-900\">{t('reports')}</h1>\n        <p className=\"text-gray-600\">\n          Generate and download comprehensive monitoring reports\n        </p>\n      </div>\n\n      <ReportGenerator />\n    </div>\n  )\n}","import { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { User, Bell, Globe, Shield, Database } from 'lucide-react'\nimport { useAuth } from '../hooks/useAuth'\n\nexport function Settings() {\n  const { t } = useTranslation()\n  const { profile } = useAuth()\n  const [activeSection, setActiveSection] = useState('profile')\n\n  const sections = [\n    { id: 'profile', label: 'Profile', icon: User },\n    { id: 'notifications', label: 'Notifications', icon: Bell },\n    { id: 'language', label: 'Language', icon: Globe },\n    { id: 'security', label: 'Security', icon: Shield },\n    { id: 'system', label: 'System', icon: Database },\n  ]\n\n  const renderSection = () => {\n    switch (activeSection) {\n      case 'profile':\n        return (\n          <div className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Profile Information</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Full Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={profile?.full_name || ''}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-ocean-500 focus:border-ocean-500\"\n                    readOnly\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Email\n                  </label>\n                  <input\n                    type=\"email\"\n                    value={profile?.email || ''}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-ocean-500 focus:border-ocean-500\"\n                    readOnly\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Role\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={profile?.role || ''}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-ocean-500 focus:border-ocean-500 capitalize\"\n                    readOnly\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Organization\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={profile?.organization || ''}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-ocean-500 focus:border-ocean-500\"\n                    readOnly\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      \n      case 'notifications':\n        return (\n          <div className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Notification Preferences</h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h4 className=\"font-medium text-gray-900\">Critical Alerts</h4>\n                    <p className=\"text-sm text-gray-600\">Receive notifications for critical hazard alerts</p>\n                  </div>\n                  <input type=\"checkbox\" defaultChecked className=\"rounded\" />\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h4 className=\"font-medium text-gray-900\">Sensor Offline</h4>\n                    <p className=\"text-sm text-gray-600\">Get notified when sensors go offline</p>\n                  </div>\n                  <input type=\"checkbox\" defaultChecked className=\"rounded\" />\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h4 className=\"font-medium text-gray-900\">Daily Reports</h4>\n                    <p className=\"text-sm text-gray-600\">Receive daily summary reports</p>\n                  </div>\n                  <input type=\"checkbox\" className=\"rounded\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      \n      case 'language':\n        return (\n          <div className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Language Settings</h3>\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Interface Language\n                  </label>\n                  <select className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-ocean-500 focus:border-ocean-500\">\n                    <option value=\"en\">English</option>\n                    <option value=\"es\">Español</option>\n                    <option value=\"fr\">Français</option>\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Date Format\n                  </label>\n                  <select className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-ocean-500 focus:border-ocean-500\">\n                    <option value=\"mdy\">MM/DD/YYYY</option>\n                    <option value=\"dmy\">DD/MM/YYYY</option>\n                    <option value=\"ymd\">YYYY-MM-DD</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      \n      case 'security':\n        return (\n          <div className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Security Settings</h3>\n              <div className=\"space-y-4\">\n                <div>\n                  <h4 className=\"font-medium text-gray-900 mb-2\">Change Password</h4>\n                  <div className=\"space-y-3\">\n                    <input\n                      type=\"password\"\n                      placeholder=\"Current password\"\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-ocean-500 focus:border-ocean-500\"\n                    />\n                    <input\n                      type=\"password\"\n                      placeholder=\"New password\"\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-ocean-500 focus:border-ocean-500\"\n                    />\n                    <input\n                      type=\"password\"\n                      placeholder=\"Confirm new password\"\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-ocean-500 focus:border-ocean-500\"\n                    />\n                    <button className=\"btn-primary\">Update Password</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      \n      case 'system':\n        return (\n          <div className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">System Information</h3>\n              <div className=\"bg-gray-50 p-4 rounded-lg space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Version:</span>\n                  <span className=\"font-medium\">1.0.0</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Last Updated:</span>\n                  <span className=\"font-medium\">{new Date().toLocaleDateString()}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Database Status:</span>\n                  <span className=\"font-medium text-green-600\">Connected</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      \n      default:\n        return null\n    }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-2xl font-bold text-gray-900\">{t('settings')}</h1>\n        <p className=\"text-gray-600\">\n          Manage your account and application preferences\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n        {/* Settings Navigation */}\n        <div className=\"lg:col-span-1\">\n          <div className=\"card\">\n            <nav className=\"space-y-2\">\n              {sections.map((section) => {\n                const Icon = section.icon\n                return (\n                  <button\n                    key={section.id}\n                    onClick={() => setActiveSection(section.id)}\n                    className={`w-full flex items-center space-x-3 px-3 py-2 text-left rounded-lg transition-colors ${\n                      activeSection === section.id\n                        ? 'bg-ocean-50 text-ocean-700'\n                        : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                    }`}\n                  >\n                    <Icon className=\"w-5 h-5\" />\n                    <span>{section.label}</span>\n                  </button>\n                )\n              })}\n            </nav>\n          </div>\n        </div>\n\n        {/* Settings Content */}\n        <div className=\"lg:col-span-3\">\n          <div className=\"card\">\n            {renderSection()}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\n\nconst resources = {\n  en: {\n    translation: {\n      // Navigation\n      dashboard: 'Dashboard',\n      sensors: 'Sensors',\n      alerts: 'Alerts',\n      reports: 'Reports',\n      settings: 'Settings',\n      logout: 'Logout',\n      \n      // Dashboard\n      oceanMonitoring: 'Ocean Monitoring System',\n      activeSensors: 'Active Sensors',\n      activeAlerts: 'Active Alerts',\n      dataPoints: 'Data Points Today',\n      systemStatus: 'System Status',\n      \n      // Sensor readings\n      ph: 'pH Level',\n      temperature: 'Temperature (°C)',\n      turbidity: 'Turbidity (NTU)',\n      dissolvedOxygen: 'Dissolved Oxygen (mg/L)',\n      conductivity: 'Conductivity (μS/cm)',\n      salinity: 'Salinity (PSU)',\n      waterLevel: 'Water Level (m)',\n      \n      // Hazard types\n      tsunami: 'Tsunami',\n      highWaves: 'High Waves',\n      oilSpill: 'Oil Spill',\n      chemicalPollution: 'Chemical Pollution',\n      biologicalPollution: 'Biological Pollution',\n      \n      // Severity levels\n      low: 'Low',\n      medium: 'Medium',\n      high: 'High',\n      critical: 'Critical',\n      \n      // Actions\n      viewDetails: 'View Details',\n      downloadReport: 'Download Report',\n      exportData: 'Export Data',\n      refresh: 'Refresh',\n      filter: 'Filter',\n      search: 'Search',\n      \n      // Time periods\n      last24Hours: 'Last 24 Hours',\n      lastWeek: 'Last Week',\n      lastMonth: 'Last Month',\n      \n      // Status\n      online: 'Online',\n      offline: 'Offline',\n      maintenance: 'Maintenance',\n      \n      // Alerts\n      newAlert: 'New Alert',\n      alertResolved: 'Alert Resolved',\n      noActiveAlerts: 'No active alerts',\n      \n      // Reports\n      generateReport: 'Generate Report',\n      reportGenerated: 'Report generated successfully',\n      \n      // Authentication\n      signIn: 'Sign In',\n      signOut: 'Sign Out',\n      email: 'Email',\n      password: 'Password',\n      \n      // Errors\n      errorLoadingData: 'Error loading data',\n      errorGeneratingReport: 'Error generating report',\n      networkError: 'Network error - working offline',\n    }\n  },\n  es: {\n    translation: {\n      // Navigation\n      dashboard: 'Panel de Control',\n      sensors: 'Sensores',\n      alerts: 'Alertas',\n      reports: 'Reportes',\n      settings: 'Configuración',\n      logout: 'Cerrar Sesión',\n      \n      // Dashboard\n      oceanMonitoring: 'Sistema de Monitoreo Oceánico',\n      activeSensors: 'Sensores Activos',\n      activeAlerts: 'Alertas Activas',\n      dataPoints: 'Puntos de Datos Hoy',\n      systemStatus: 'Estado del Sistema',\n      \n      // Sensor readings\n      ph: 'Nivel de pH',\n      temperature: 'Temperatura (°C)',\n      turbidity: 'Turbidez (NTU)',\n      dissolvedOxygen: 'Oxígeno Disuelto (mg/L)',\n      conductivity: 'Conductividad (μS/cm)',\n      salinity: 'Salinidad (PSU)',\n      waterLevel: 'Nivel del Agua (m)',\n      \n      // Hazard types\n      tsunami: 'Tsunami',\n      highWaves: 'Olas Altas',\n      oilSpill: 'Derrame de Petróleo',\n      chemicalPollution: 'Contaminación Química',\n      biologicalPollution: 'Contaminación Biológica',\n      \n      // Severity levels\n      low: 'Bajo',\n      medium: 'Medio',\n      high: 'Alto',\n      critical: 'Crítico',\n      \n      // Actions\n      viewDetails: 'Ver Detalles',\n      downloadReport: 'Descargar Reporte',\n      exportData: 'Exportar Datos',\n      refresh: 'Actualizar',\n      filter: 'Filtrar',\n      search: 'Buscar',\n      \n      // Time periods\n      last24Hours: 'Últimas 24 Horas',\n      lastWeek: 'Última Semana',\n      lastMonth: 'Último Mes',\n      \n      // Status\n      online: 'En Línea',\n      offline: 'Fuera de Línea',\n      maintenance: 'Mantenimiento',\n      \n      // Alerts\n      newAlert: 'Nueva Alerta',\n      alertResolved: 'Alerta Resuelta',\n      noActiveAlerts: 'No hay alertas activas',\n      \n      // Reports\n      generateReport: 'Generar Reporte',\n      reportGenerated: 'Reporte generado exitosamente',\n      \n      // Authentication\n      signIn: 'Iniciar Sesión',\n      signOut: 'Cerrar Sesión',\n      email: 'Correo Electrónico',\n      password: 'Contraseña',\n      \n      // Errors\n      errorLoadingData: 'Error al cargar datos',\n      errorGeneratingReport: 'Error al generar reporte',\n      networkError: 'Error de red - trabajando sin conexión',\n    }\n  },\n  fr: {\n    translation: {\n      // Navigation\n      dashboard: 'Tableau de Bord',\n      sensors: 'Capteurs',\n      alerts: 'Alertes',\n      reports: 'Rapports',\n      settings: 'Paramètres',\n      logout: 'Déconnexion',\n      \n      // Dashboard\n      oceanMonitoring: 'Système de Surveillance Océanique',\n      activeSensors: 'Capteurs Actifs',\n      activeAlerts: 'Alertes Actives',\n      dataPoints: 'Points de Données Aujourd\\'hui',\n      systemStatus: 'État du Système',\n      \n      // Sensor readings\n      ph: 'Niveau de pH',\n      temperature: 'Température (°C)',\n      turbidity: 'Turbidité (NTU)',\n      dissolvedOxygen: 'Oxygène Dissous (mg/L)',\n      conductivity: 'Conductivité (μS/cm)',\n      salinity: 'Salinité (PSU)',\n      waterLevel: 'Niveau d\\'Eau (m)',\n      \n      // Hazard types\n      tsunami: 'Tsunami',\n      highWaves: 'Vagues Hautes',\n      oilSpill: 'Déversement de Pétrole',\n      chemicalPollution: 'Pollution Chimique',\n      biologicalPollution: 'Pollution Biologique',\n      \n      // Severity levels\n      low: 'Faible',\n      medium: 'Moyen',\n      high: 'Élevé',\n      critical: 'Critique',\n      \n      // Actions\n      viewDetails: 'Voir les Détails',\n      downloadReport: 'Télécharger le Rapport',\n      exportData: 'Exporter les Données',\n      refresh: 'Actualiser',\n      filter: 'Filtrer',\n      search: 'Rechercher',\n      \n      // Time periods\n      last24Hours: 'Dernières 24 Heures',\n      lastWeek: 'Dernière Semaine',\n      lastMonth: 'Dernier Mois',\n      \n      // Status\n      online: 'En Ligne',\n      offline: 'Hors Ligne',\n      maintenance: 'Maintenance',\n      \n      // Alerts\n      newAlert: 'Nouvelle Alerte',\n      alertResolved: 'Alerte Résolue',\n      noActiveAlerts: 'Aucune alerte active',\n      \n      // Reports\n      generateReport: 'Générer un Rapport',\n      reportGenerated: 'Rapport généré avec succès',\n      \n      // Authentication\n      signIn: 'Se Connecter',\n      signOut: 'Se Déconnecter',\n      email: 'Email',\n      password: 'Mot de Passe',\n      \n      // Errors\n      errorLoadingData: 'Erreur lors du chargement des données',\n      errorGeneratingReport: 'Erreur lors de la génération du rapport',\n      networkError: 'Erreur réseau - travail hors ligne',\n    }\n  }\n}\n\ni18n\n  .use(initReactI18next)\n  .init({\n    resources,\n    lng: 'en',\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false,\n    },\n  })\n\nexport default i18n","import { useState, useEffect } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { Header } from './components/Layout/Header'\nimport { Sidebar } from './components/Layout/Sidebar'\nimport { LoginForm } from './components/Auth/LoginForm'\nimport { LoadingSpinner } from './components/Common/LoadingSpinner'\nimport { Dashboard } from './pages/Dashboard'\nimport { Sensors } from './pages/Sensors'\nimport { Alerts } from './pages/Alerts'\nimport { Reports } from './pages/Reports'\nimport { Settings } from './pages/Settings'\nimport { useAuth } from './hooks/useAuth'\nimport './lib/i18n'\n\nfunction App() {\n  const { i18n } = useTranslation()\n  const { user, loading } = useAuth()\n  const [activeTab, setActiveTab] = useState('dashboard')\n  const [currentLanguage, setCurrentLanguage] = useState('en')\n\n  useEffect(() => {\n    // Register service worker for PWA\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.register('/sw.js')\n        .then(registration => {\n          console.log('SW registered: ', registration)\n        })\n        .catch(registrationError => {\n          console.log('SW registration failed: ', registrationError)\n        })\n    }\n  }, [])\n\n  const handleLanguageChange = (lang: string) => {\n    setCurrentLanguage(lang)\n    i18n.changeLanguage(lang)\n  }\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <LoadingSpinner size=\"lg\" />\n          <p className=\"mt-4 text-gray-600\">Loading Aqua Alert...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (!user) {\n    return <LoginForm />\n  }\n\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'dashboard':\n        return <Dashboard />\n      case 'sensors':\n        return <Sensors />\n      case 'alerts':\n        return <Alerts />\n      case 'reports':\n        return <Reports />\n      case 'settings':\n        return <Settings />\n      default:\n        return <Dashboard />\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header \n        onLanguageChange={handleLanguageChange}\n        currentLanguage={currentLanguage}\n      />\n      \n      <div className=\"flex h-[calc(100vh-4rem)]\">\n        <Sidebar \n          activeTab={activeTab}\n          onTabChange={setActiveTab}\n        />\n        \n        <main className=\"flex-1 overflow-auto\">\n          <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n            {renderContent()}\n          </div>\n        </main>\n      </div>\n    </div>\n  )\n}\n\nexport default App","import { Component, ErrorInfo, ReactNode } from 'react'\nimport { AlertTriangle, RefreshCw } from 'lucide-react'\n\ninterface Props {\n  children: ReactNode\n}\n\ninterface State {\n  hasError: boolean\n  error?: Error\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false\n  }\n\n  public static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error }\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('Uncaught error:', error, errorInfo)\n  }\n\n  private handleRetry = () => {\n    this.setState({ hasError: false, error: undefined })\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n          <div className=\"max-w-md w-full bg-white rounded-lg shadow-lg p-6 text-center\">\n            <AlertTriangle className=\"w-12 h-12 text-red-500 mx-auto mb-4\" />\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">\n              Something went wrong\n            </h2>\n            <p className=\"text-gray-600 mb-6\">\n              An unexpected error occurred. Please try refreshing the page.\n            </p>\n            <button\n              onClick={this.handleRetry}\n              className=\"btn-primary flex items-center space-x-2 mx-auto\"\n            >\n              <RefreshCw className=\"w-4 h-4\" />\n              <span>Try Again</span>\n            </button>\n            {this.state.error && (\n              <details className=\"mt-4 text-left\">\n                <summary className=\"text-sm text-gray-500 cursor-pointer\">\n                  Error Details\n                </summary>\n                <pre className=\"mt-2 text-xs text-gray-600 bg-gray-50 p-2 rounded overflow-auto\">\n                  {this.state.error.message}\n                </pre>\n              </details>\n            )}\n          </div>\n        </div>\n      )\n    }\n\n    return this.props.children\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.tsx'\nimport { ErrorBoundary } from './components/Common/ErrorBoundary'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </React.StrictMode>,\n)"],"names":["supabaseUrl","supabaseAnonKey","supabase","createClient","useAuth","user","setUser","useState","profile","setProfile","loading","setLoading","useEffect","session","fetchProfile","subscription","_","userId","data","error","email","password","requiredRole","roleHierarchy","useOfflineData","key","setData","isOnline","setIsOnline","cachedData","handleOnline","handleOffline","newData","useAlerts","alerts","setAlerts","setError","cacheData","fetchAlerts","payload","prev","alert","err","type","severity","alertData","id","updates","Header","onLanguageChange","currentLanguage","t","useTranslation","signOut","getActiveAlerts","criticalAlerts","languages","jsx","jsxs","Wifi","WifiOff","Bell","e","lang","Globe","User","LogOut","Sidebar","activeTab","onTabChange","hasRole","visibleItems","Home","Radio","BarChart3","FileText","Activity","Settings","item","role","Icon","isActive","LoginForm","signIn","setEmail","setPassword","handleSubmit","AlertCircle","Mail","Lock","LogIn","LoadingSpinner","size","className","sizeClasses","StatsCard","title","value","trend","color","colorClasses","RealtimeChart","parameter","unit","chartData","reading","formatTooltip","ResponsiveContainer","LineChart","CartesianGrid","XAxis","YAxis","Tooltip","Line","AlertsPanel","activeAlerts","getSeverityColor","getSeverityIcon","AlertTriangle","Clock","CheckCircle","getHazardTypeLabel","MapPin","L","SensorMap","sensors","readings","onSensorClick","mapRef","useRef","mapInstanceRef","markersRef","marker","_a","sensor","latestReading","r","iconColor","customIcon","popupContent","group","s","useSensorData","setSensors","setReadings","fetchSensors","fetchRecentReadings","sensorId","hours","cutoff","Dashboard","sensorsLoading","activeSensors","todayReadings","today","i","Database","Sensors","getLatestReading","getReadingsBySensor","selectedSensor","setSelectedSensor","getSensorStatus","lastReadingTime","getStatusText","status","Fragment","Alerts","filter","setFilter","severityFilter","setSeverityFilter","searchTerm","setSearchTerm","filteredAlerts","matchesFilter","matchesSeverity","matchesSearch","getHazardTypeColor","a","Filter","Search","ReportGenerator","reportType","setReportType","dateRange","setDateRange","generating","setGenerating","generatePDFReport","pdf","jsPDF","pageHeight","startDate","endDate","filteredReadings","readingDate","alertDate","yPosition","avgPh","sum","avgTemp","avgDO","avgTurbidity","generateCSVReport","csvContent","blob","url","Download","date","Reports","activeSection","setActiveSection","sections","Shield","renderSection","section","resources","i18n","initReactI18next","App","setActiveTab","setCurrentLanguage","registration","registrationError","handleLanguageChange","renderContent","ErrorBoundary","Component","__publicField","errorInfo","RefreshCw","ReactDOM","React"],"mappings":"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"}